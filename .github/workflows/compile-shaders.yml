name: Compile and Commit Hardware Acceleration Shaders

on:
  push:
    paths:
      - 'src/shaders/*.vert'
      - 'src/shaders/*.frag'
      - '.github/workflows/compile-shaders.yml'
  workflow_dispatch: # Allow manual triggering

jobs:
  compile-shaders:
    runs-on: windows-2025
    permissions:
      contents: write # Allow pushing compiled shaders back to repo
    strategy:
      matrix:
        include:
          - qt_ver: 6.10.0
            qt_arch: win64_msvc2022_64
            msvc_arch: x64
            qt_arch_install: msvc2022_64

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Qt with shader tools
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ matrix.qt_ver }}
        arch: ${{ matrix.qt_arch }}
        host: 'windows'
        target: 'desktop'
        cache: 'false'
        modules: 'qtshadertools'
        archives: 'qtbase'

    - name: Verify qsb tool
      run: |
        echo "Checking for qsb tool..."
        where qsb
        echo "Qt Shader Baker (qsb) tool available"
      shell: cmd

    - name: Compile shaders with modern targets
      working-directory: src/shaders
      shell: cmd
      run: |
        echo Compiling shaders for Qt 6.x with modern targets...

        REM Create output directory
        if not exist compiled mkdir compiled

        REM Compile all shaders for latest desktop targets only
        REM Using GLSL 460 (OpenGL 4.6) + HLSL 68 (D3D12/D3D11 Shader Model 6.8)
        for %%f in (*.vert *.frag) do (
          echo Compiling shader: %%f
          echo Checking shader version:
          findstr /c:"#version" "%%f"

          REM Try Qt Quick's proven parameters (from documentation)
          echo Running: qsb --glsl "460" --hlsl 68 -o "compiled/%%f.qsb" "%%f"
          qsb --glsl "460" --hlsl 68 -o "compiled/%%f.qsb" "%%f"

          if exist "compiled/%%f.qsb" (
            echo ✓ Successfully compiled: %%f -^> %%f.qsb
          ) else (
            echo ✗ Per-target compilation failed, trying SPIR-V only fallback
            echo Running fallback: qsb -o "compiled/%%f.qsb" "%%f"
            qsb -o "compiled/%%f.qsb" "%%f"
            if exist "compiled/%%f.qsb" (
              echo ✓ SPIR-V fallback successful: %%f
            ) else (
              echo ✗ All compilation methods failed: %%f
              exit /b 1
            )
          )
        )

    - name: Commit compiled shaders to repository
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Add compiled shaders and resource file
        git add src/shaders/compiled/*.qsb

        # Check if there are changes to commit
        git diff --staged --quiet
        if %ERRORLEVEL% EQU 0 (
          echo No shader changes to commit
        ) else (
          git commit -m "Auto-compile shaders: Update compiled .qsb files"
          git push
          echo Compiled shaders committed to repository
        )
      shell: cmd

    - name: Create compilation summary
      working-directory: src/shaders
      run: |
        echo "## Shader Compilation Summary" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "| Shader | Status | Size |" >> $env:GITHUB_STEP_SUMMARY
        echo "|--------|--------|------|" >> $env:GITHUB_STEP_SUMMARY

        if (Test-Path "compiled") {
          Get-ChildItem compiled/*.qsb | ForEach-Object {
            $size = [math]::Round($_.Length / 1KB, 1).ToString() + " KB"
            echo "| $($_.Name) | ✅ Compiled | $size |" >> $env:GITHUB_STEP_SUMMARY
          }
        }

        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "All shaders compiled successfully with GLSL 460 + HLSL 68!" >> $env:GITHUB_STEP_SUMMARY
        echo "Targets: Windows (D3D11) + Linux (OpenGL 4.6)" >> $env:GITHUB_STEP_SUMMARY
      shell: powershell
