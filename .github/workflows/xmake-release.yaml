name: publish website with xmake on windows
on:
  push:
    tags: '*'

jobs:
  build:
    runs-on: windows-2025
    strategy:
      matrix:
        include:
          - qt_ver: 6.10.0
            qt_arch: win64_msvc2022_64
            msvc_arch: x64
            qt_arch_install: msvc2022_64
    steps:
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Install Qt and Qt Installer Framework
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt_ver }}
          arch: ${{ matrix.qt_arch }}
          host: 'windows'
          target: 'desktop'
          cache: 'false'
          tools: 'tools_ifw'
          modules: 'qtmultimedia'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: build/website
          fetch-depth: 1

      - name: Setup graphviz
        run: |
          choco install graphviz doxygen.install

      - name: Build
        run: |
          xmake config --yes --arch=x64 --toolchain=msvc --mode=release --generate-repository=y
          xmake build --jobs=2
          xmake doxygen --yes

      - name: Copy Files 
        shell: pwsh
        run: |
          mkdir ./packaging/org.midieditor.midieditor/data/
          cp ./bin/MidiEditor.exe ./packaging/org.midieditor.midieditor/data/MidiEditor.exe
          windeployqt ./packaging/org.midieditor.midieditor/data/MidiEditor.exe
          mkdir ./packaging/org.midieditor.midieditor/data/metronome
          cp ./run_environment/metronome/metronome-01.wav ./packaging/org.midieditor.midieditor/data/metronome
          mkdir ./packaging/org.midieditor.manual/data/
          cp -Recurse -Path ./manual/ -Destination ./packaging/org.midieditor.manual/data/

      - name: Packaging
        shell: cmd
        run: |
          binarycreator.exe --offline-only -c .\scripts\packaging\windows\config.xml -p .\packaging Install.exe

      - name: Release installer
        uses: softprops/action-gh-release@v2
        with:
          draft: ${{ startsWith(github.ref, 'refs/tags/nightly') }}
          fail_on_unmatched_files: true
          files: Install.exe

      - name: Publish website
        run: |
          cd build/website
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Generate Website for ${{ github.ref }}"
          git push

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MidiEditor-Installer
          path: Install.exe
